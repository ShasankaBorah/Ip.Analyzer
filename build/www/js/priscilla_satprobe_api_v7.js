/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.priscilla_common_api.CarrierBasicInformation');
goog.provide('proto.priscilla_common_api.CarrierInformation');
goog.provide('proto.priscilla_common_api.ClassificationStatus');
goog.provide('proto.priscilla_common_api.ClockReference');
goog.provide('proto.priscilla_common_api.DemodulatorType');
goog.provide('proto.priscilla_common_api.FecType');
goog.provide('proto.priscilla_common_api.GetVersion');
goog.provide('proto.priscilla_common_api.Header');
goog.provide('proto.priscilla_common_api.HelloMessage');
goog.provide('proto.priscilla_common_api.Issyi');
goog.provide('proto.priscilla_common_api.MessageType');
goog.provide('proto.priscilla_common_api.ModulationType');
goog.provide('proto.priscilla_common_api.Network');
goog.provide('proto.priscilla_common_api.Npd');
goog.provide('proto.priscilla_common_api.OuterFec');
goog.provide('proto.priscilla_common_api.PairedIPAddress');
goog.provide('proto.priscilla_common_api.RFBand');
goog.provide('proto.priscilla_common_api.ReturnCode');
goog.provide('proto.priscilla_common_api.ReturnMessage');
goog.provide('proto.priscilla_common_api.SatelliteFraming');
goog.provide('proto.priscilla_common_api.ScramblingType');
goog.provide('proto.priscilla_common_api.SisMis');
goog.provide('proto.priscilla_common_api.SystemType');
goog.provide('proto.priscilla_common_api.TC1Configuration');
goog.provide('proto.priscilla_common_api.TerminalId');
goog.provide('proto.priscilla_common_api.get_message_header');
goog.provide('proto.priscilla_satprobe_api.CaptureMode');
goog.provide('proto.priscilla_satprobe_api.CarrierStatistics');
goog.provide('proto.priscilla_satprobe_api.CarriersConfiguration');
goog.provide('proto.priscilla_satprobe_api.DebugConfiguration');
goog.provide('proto.priscilla_satprobe_api.DecoderConfiguration');
goog.provide('proto.priscilla_satprobe_api.EthernetDevice');
goog.provide('proto.priscilla_satprobe_api.FLBasedModeConfiguration');
goog.provide('proto.priscilla_satprobe_api.IPForwardingConfiguration');
goog.provide('proto.priscilla_satprobe_api.IPStorageConfiguration');
goog.provide('proto.priscilla_satprobe_api.NewtecConfiguration');
goog.provide('proto.priscilla_satprobe_api.NewtecStatistics');
goog.provide('proto.priscilla_satprobe_api.PSSRConfiguration');
goog.provide('proto.priscilla_satprobe_api.PSSRDevice');
goog.provide('proto.priscilla_satprobe_api.PSSRStatistics');
goog.provide('proto.priscilla_satprobe_api.SencoreConfiguration');
goog.provide('proto.priscilla_satprobe_api.SencoreStatistics');
goog.provide('proto.priscilla_satprobe_api.SystemConfiguration');
goog.provide('proto.priscilla_satprobe_api.TC1Device');
goog.provide('proto.priscilla_satprobe_api.TC1Statistics');
goog.provide('proto.priscilla_satprobe_api.XYData');
goog.provide('proto.priscilla_satprobe_api.XYDataset');
goog.provide('proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message');
goog.provide('proto.priscilla_satprobe_api.capture_started_message');
goog.provide('proto.priscilla_satprobe_api.capture_stopped_message');
goog.provide('proto.priscilla_satprobe_api.get_available_devices_message');
goog.provide('proto.priscilla_satprobe_api.get_carriers_configuration_message');
goog.provide('proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message');
goog.provide('proto.priscilla_satprobe_api.get_system_configuration_message');
goog.provide('proto.priscilla_satprobe_api.rl_carriers_from_fl_message');
goog.provide('proto.priscilla_satprobe_api.set_carriers_configuration_message');
goog.provide('proto.priscilla_satprobe_api.set_system_configuration_message');
goog.provide('proto.priscilla_satprobe_api.set_system_shutdown_message');
goog.provide('proto.priscilla_satprobe_api.spectrum_data_message');
goog.provide('proto.priscilla_satprobe_api.start_capture_message');
goog.provide('proto.priscilla_satprobe_api.statistics_message');
goog.provide('proto.priscilla_satprobe_api.status_message');
goog.provide('proto.priscilla_satprobe_api.stop_capture_message');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.HelloMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.HelloMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.HelloMessage.displayName = 'proto.priscilla_common_api.HelloMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.HelloMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.HelloMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.HelloMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.HelloMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    endPointId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endPointVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hostName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ipAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    datetime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    instanceId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.HelloMessage}
 */
proto.priscilla_common_api.HelloMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.HelloMessage;
  return proto.priscilla_common_api.HelloMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.HelloMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.HelloMessage}
 */
proto.priscilla_common_api.HelloMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndPointId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndPointVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatetime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInstanceId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.HelloMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.HelloMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.HelloMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.HelloMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndPointId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEndPointVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHostName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDatetime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInstanceId();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * optional uint64 end_point_id = 1;
 * @return {number}
 */
proto.priscilla_common_api.HelloMessage.prototype.getEndPointId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_common_api.HelloMessage.prototype.setEndPointId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string end_point_version = 2;
 * @return {string}
 */
proto.priscilla_common_api.HelloMessage.prototype.getEndPointVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_common_api.HelloMessage.prototype.setEndPointVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string host_name = 3;
 * @return {string}
 */
proto.priscilla_common_api.HelloMessage.prototype.getHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.priscilla_common_api.HelloMessage.prototype.setHostName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string ip_address = 4;
 * @return {string}
 */
proto.priscilla_common_api.HelloMessage.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.priscilla_common_api.HelloMessage.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.priscilla_common_api.HelloMessage.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.priscilla_common_api.HelloMessage.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string datetime = 6;
 * @return {string}
 */
proto.priscilla_common_api.HelloMessage.prototype.getDatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.priscilla_common_api.HelloMessage.prototype.setDatetime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint64 instance_id = 7;
 * @return {number}
 */
proto.priscilla_common_api.HelloMessage.prototype.getInstanceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.priscilla_common_api.HelloMessage.prototype.setInstanceId = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint64 session_id = 8;
 * @return {number}
 */
proto.priscilla_common_api.HelloMessage.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.priscilla_common_api.HelloMessage.prototype.setSessionId = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.GetVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.GetVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.GetVersion.displayName = 'proto.priscilla_common_api.GetVersion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.GetVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.GetVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.GetVersion} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.GetVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    protoVersion: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.GetVersion}
 */
proto.priscilla_common_api.GetVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.GetVersion;
  return proto.priscilla_common_api.GetVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.GetVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.GetVersion}
 */
proto.priscilla_common_api.GetVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProtoVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.GetVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.GetVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.GetVersion} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.GetVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtoVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 proto_version = 1;
 * @return {number}
 */
proto.priscilla_common_api.GetVersion.prototype.getProtoVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_common_api.GetVersion.prototype.setProtoVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.Header.displayName = 'proto.priscilla_common_api.Header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.Header.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.Header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.Header} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.Header.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bodyLength: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.Header}
 */
proto.priscilla_common_api.Header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.Header;
  return proto.priscilla_common_api.Header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.Header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.Header}
 */
proto.priscilla_common_api.Header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.priscilla_common_api.MessageType} */ (reader.readEnum());
      msg.setMessageType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBodyLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.Header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.Header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.Header} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.Header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBodyLength();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional MessageType message_type = 1;
 * @return {!proto.priscilla_common_api.MessageType}
 */
proto.priscilla_common_api.Header.prototype.getMessageType = function() {
  return /** @type {!proto.priscilla_common_api.MessageType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.priscilla_common_api.MessageType} value */
proto.priscilla_common_api.Header.prototype.setMessageType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 request_id = 2;
 * @return {number}
 */
proto.priscilla_common_api.Header.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_common_api.Header.prototype.setRequestId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 body_length = 3;
 * @return {number}
 */
proto.priscilla_common_api.Header.prototype.getBodyLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_common_api.Header.prototype.setBodyLength = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.ReturnMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.ReturnMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.ReturnMessage.displayName = 'proto.priscilla_common_api.ReturnMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.ReturnMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.ReturnMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.ReturnMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.ReturnMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_common_api.ReturnMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.ReturnMessage;
  return proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.ReturnMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.priscilla_common_api.ReturnCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.ReturnMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.ReturnMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ReturnCode code = 1;
 * @return {!proto.priscilla_common_api.ReturnCode}
 */
proto.priscilla_common_api.ReturnMessage.prototype.getCode = function() {
  return /** @type {!proto.priscilla_common_api.ReturnCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.priscilla_common_api.ReturnCode} value */
proto.priscilla_common_api.ReturnMessage.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.priscilla_common_api.ReturnMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_common_api.ReturnMessage.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.Network = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_common_api.Network.repeatedFields_, null);
};
goog.inherits(proto.priscilla_common_api.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.Network.displayName = 'proto.priscilla_common_api.Network';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_common_api.Network.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.Network.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.Network.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.Network} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.Network.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    carrierFrequencyList: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.Network}
 */
proto.priscilla_common_api.Network.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.Network;
  return proto.priscilla_common_api.Network.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.Network}
 */
proto.priscilla_common_api.Network.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNetworkId(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedUint64());
      msg.setCarrierFrequencyList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.Network.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.Network} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.Network.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCarrierFrequencyList();
  if (f.length > 0) {
    writer.writePackedUint64(
      2,
      f
    );
  }
};


/**
 * optional int32 network_id = 1;
 * @return {number}
 */
proto.priscilla_common_api.Network.prototype.getNetworkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_common_api.Network.prototype.setNetworkId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated uint64 carrier_frequency = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.priscilla_common_api.Network.prototype.getCarrierFrequencyList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<number>} value */
proto.priscilla_common_api.Network.prototype.setCarrierFrequencyList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.priscilla_common_api.Network.prototype.addCarrierFrequency = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.priscilla_common_api.Network.prototype.clearCarrierFrequencyList = function() {
  this.setCarrierFrequencyList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.PairedIPAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.PairedIPAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.PairedIPAddress.displayName = 'proto.priscilla_common_api.PairedIPAddress';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.PairedIPAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.PairedIPAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.PairedIPAddress} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.PairedIPAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nbrOfOccurences: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.PairedIPAddress}
 */
proto.priscilla_common_api.PairedIPAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.PairedIPAddress;
  return proto.priscilla_common_api.PairedIPAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.PairedIPAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.PairedIPAddress}
 */
proto.priscilla_common_api.PairedIPAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNbrOfOccurences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.PairedIPAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.PairedIPAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.PairedIPAddress} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.PairedIPAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNbrOfOccurences();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.priscilla_common_api.PairedIPAddress.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_common_api.PairedIPAddress.prototype.setSource = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string destination = 2;
 * @return {string}
 */
proto.priscilla_common_api.PairedIPAddress.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_common_api.PairedIPAddress.prototype.setDestination = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 nbr_of_occurences = 3;
 * @return {number}
 */
proto.priscilla_common_api.PairedIPAddress.prototype.getNbrOfOccurences = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_common_api.PairedIPAddress.prototype.setNbrOfOccurences = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.TerminalId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.TerminalId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.TerminalId.displayName = 'proto.priscilla_common_api.TerminalId';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.TerminalId.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.TerminalId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.TerminalId} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.TerminalId.toObject = function(includeInstance, msg) {
  var f, obj = {
    terminalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nbrOfOccurences: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.TerminalId}
 */
proto.priscilla_common_api.TerminalId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.TerminalId;
  return proto.priscilla_common_api.TerminalId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.TerminalId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.TerminalId}
 */
proto.priscilla_common_api.TerminalId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTerminalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNbrOfOccurences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.TerminalId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.TerminalId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.TerminalId} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.TerminalId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTerminalId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNbrOfOccurences();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional uint64 terminal_id = 1;
 * @return {number}
 */
proto.priscilla_common_api.TerminalId.prototype.getTerminalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_common_api.TerminalId.prototype.setTerminalId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 nbr_of_occurences = 2;
 * @return {number}
 */
proto.priscilla_common_api.TerminalId.prototype.getNbrOfOccurences = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_common_api.TerminalId.prototype.setNbrOfOccurences = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.CarrierBasicInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.CarrierBasicInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.CarrierBasicInformation.displayName = 'proto.priscilla_common_api.CarrierBasicInformation';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.CarrierBasicInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.CarrierBasicInformation} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.CarrierBasicInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    isEnabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    demodulatorType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frequency: jspb.Message.getFieldWithDefault(msg, 3, 0),
    systemType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    symbolRate: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    modulation: jspb.Message.getFieldWithDefault(msg, 6, 0),
    innerFec: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    blockSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    frameFormat: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_common_api.CarrierBasicInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.CarrierBasicInformation;
  return proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.CarrierBasicInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 2:
      var value = /** @type {!proto.priscilla_common_api.DemodulatorType} */ (reader.readEnum());
      msg.setDemodulatorType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 4:
      var value = /** @type {!proto.priscilla_common_api.SystemType} */ (reader.readEnum());
      msg.setSystemType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSymbolRate(value);
      break;
    case 6:
      var value = /** @type {!proto.priscilla_common_api.ModulationType} */ (reader.readEnum());
      msg.setModulation(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInnerFec(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrameFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.CarrierBasicInformation} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDemodulatorType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSystemType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSymbolRate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getModulation();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getInnerFec();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getBlockSize();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getFrameFormat();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional bool is_enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setIsEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional DemodulatorType demodulator_type = 2;
 * @return {!proto.priscilla_common_api.DemodulatorType}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getDemodulatorType = function() {
  return /** @type {!proto.priscilla_common_api.DemodulatorType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.priscilla_common_api.DemodulatorType} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setDemodulatorType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 frequency = 3;
 * @return {number}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional SystemType system_type = 4;
 * @return {!proto.priscilla_common_api.SystemType}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getSystemType = function() {
  return /** @type {!proto.priscilla_common_api.SystemType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.priscilla_common_api.SystemType} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setSystemType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double symbol_rate = 5;
 * @return {number}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getSymbolRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setSymbolRate = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional ModulationType modulation = 6;
 * @return {!proto.priscilla_common_api.ModulationType}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getModulation = function() {
  return /** @type {!proto.priscilla_common_api.ModulationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.priscilla_common_api.ModulationType} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setModulation = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double inner_fec = 7;
 * @return {number}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getInnerFec = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setInnerFec = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint32 block_size = 8;
 * @return {number}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getBlockSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setBlockSize = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint32 frame_format = 9;
 * @return {number}
 */
proto.priscilla_common_api.CarrierBasicInformation.prototype.getFrameFormat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierBasicInformation.prototype.setFrameFormat = function(value) {
  jspb.Message.setField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.CarrierInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_common_api.CarrierInformation.repeatedFields_, null);
};
goog.inherits(proto.priscilla_common_api.CarrierInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.CarrierInformation.displayName = 'proto.priscilla_common_api.CarrierInformation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_common_api.CarrierInformation.repeatedFields_ = [29,30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.CarrierInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.CarrierInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.CarrierInformation} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.CarrierInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    basicInformation: (f = msg.getBasicInformation()) && proto.priscilla_common_api.CarrierBasicInformation.toObject(includeInstance, f),
    classificationStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bandwidth: jspb.Message.getFieldWithDefault(msg, 3, 0),
    outerFec: jspb.Message.getFieldWithDefault(msg, 4, 0),
    innerFecType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    snr: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    signalResolution: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    rollOff: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    isBursting: jspb.Message.getFieldWithDefault(msg, 9, false),
    invertedSpectrum: jspb.Message.getFieldWithDefault(msg, 10, false),
    innerFecInterleaverDepth: jspb.Message.getFieldWithDefault(msg, 11, 0),
    outerFecInterleaverDepth: jspb.Message.getFieldWithDefault(msg, 12, 0),
    satelliteFraming: jspb.Message.getFieldWithDefault(msg, 13, 0),
    scramblingType: jspb.Message.getFieldWithDefault(msg, 14, 0),
    dataRate: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    pilots: jspb.Message.getFieldWithDefault(msg, 16, false),
    power: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    correctedBer: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    ebN0: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    esN0: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
    minBurstDuration: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    maxBurstDuration: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    streamType: jspb.Message.getFieldWithDefault(msg, 23, 0),
    sismis: jspb.Message.getFieldWithDefault(msg, 24, 0),
    issyi: jspb.Message.getFieldWithDefault(msg, 25, 0),
    npd: jspb.Message.getFieldWithDefault(msg, 26, 0),
    streamIds: jspb.Message.getFieldWithDefault(msg, 27, ""),
    network: (f = msg.getNetwork()) && proto.priscilla_common_api.Network.toObject(includeInstance, f),
    pairedIpAddressList: jspb.Message.toObjectList(msg.getPairedIpAddressList(),
    proto.priscilla_common_api.PairedIPAddress.toObject, includeInstance),
    terminalIdList: jspb.Message.toObjectList(msg.getTerminalIdList(),
    proto.priscilla_common_api.TerminalId.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.CarrierInformation}
 */
proto.priscilla_common_api.CarrierInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.CarrierInformation;
  return proto.priscilla_common_api.CarrierInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.CarrierInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.CarrierInformation}
 */
proto.priscilla_common_api.CarrierInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.CarrierBasicInformation;
      reader.readMessage(value,proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader);
      msg.setBasicInformation(value);
      break;
    case 2:
      var value = /** @type {!proto.priscilla_common_api.ClassificationStatus} */ (reader.readEnum());
      msg.setClassificationStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandwidth(value);
      break;
    case 4:
      var value = /** @type {!proto.priscilla_common_api.OuterFec} */ (reader.readEnum());
      msg.setOuterFec(value);
      break;
    case 5:
      var value = /** @type {!proto.priscilla_common_api.FecType} */ (reader.readEnum());
      msg.setInnerFecType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSnr(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSignalResolution(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRollOff(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBursting(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvertedSpectrum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInnerFecInterleaverDepth(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOuterFecInterleaverDepth(value);
      break;
    case 13:
      var value = /** @type {!proto.priscilla_common_api.SatelliteFraming} */ (reader.readEnum());
      msg.setSatelliteFraming(value);
      break;
    case 14:
      var value = /** @type {!proto.priscilla_common_api.ScramblingType} */ (reader.readEnum());
      msg.setScramblingType(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDataRate(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPilots(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPower(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCorrectedBer(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEbN0(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEsN0(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinBurstDuration(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxBurstDuration(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStreamType(value);
      break;
    case 24:
      var value = /** @type {!proto.priscilla_common_api.SisMis} */ (reader.readEnum());
      msg.setSismis(value);
      break;
    case 25:
      var value = /** @type {!proto.priscilla_common_api.Issyi} */ (reader.readEnum());
      msg.setIssyi(value);
      break;
    case 26:
      var value = /** @type {!proto.priscilla_common_api.Npd} */ (reader.readEnum());
      msg.setNpd(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamIds(value);
      break;
    case 28:
      var value = new proto.priscilla_common_api.Network;
      reader.readMessage(value,proto.priscilla_common_api.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 29:
      var value = new proto.priscilla_common_api.PairedIPAddress;
      reader.readMessage(value,proto.priscilla_common_api.PairedIPAddress.deserializeBinaryFromReader);
      msg.addPairedIpAddress(value);
      break;
    case 30:
      var value = new proto.priscilla_common_api.TerminalId;
      reader.readMessage(value,proto.priscilla_common_api.TerminalId.deserializeBinaryFromReader);
      msg.addTerminalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.CarrierInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.CarrierInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.CarrierInformation} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.CarrierInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasicInformation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter
    );
  }
  f = message.getClassificationStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBandwidth();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getOuterFec();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getInnerFecType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSignalResolution();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getRollOff();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getIsBursting();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getInvertedSpectrum();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getInnerFecInterleaverDepth();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getOuterFecInterleaverDepth();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getSatelliteFraming();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getScramblingType();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getDataRate();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getPilots();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPower();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getCorrectedBer();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getEbN0();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getEsN0();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getMinBurstDuration();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getMaxBurstDuration();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getStreamType();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getSismis();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getIssyi();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getNpd();
  if (f !== 0.0) {
    writer.writeEnum(
      26,
      f
    );
  }
  f = message.getStreamIds();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.priscilla_common_api.Network.serializeBinaryToWriter
    );
  }
  f = message.getPairedIpAddressList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      29,
      f,
      proto.priscilla_common_api.PairedIPAddress.serializeBinaryToWriter
    );
  }
  f = message.getTerminalIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      proto.priscilla_common_api.TerminalId.serializeBinaryToWriter
    );
  }
};


/**
 * optional CarrierBasicInformation basic_information = 1;
 * @return {?proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getBasicInformation = function() {
  return /** @type{?proto.priscilla_common_api.CarrierBasicInformation} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.CarrierBasicInformation, 1));
};


/** @param {?proto.priscilla_common_api.CarrierBasicInformation|undefined} value */
proto.priscilla_common_api.CarrierInformation.prototype.setBasicInformation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_common_api.CarrierInformation.prototype.clearBasicInformation = function() {
  this.setBasicInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_common_api.CarrierInformation.prototype.hasBasicInformation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClassificationStatus classification_status = 2;
 * @return {!proto.priscilla_common_api.ClassificationStatus}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getClassificationStatus = function() {
  return /** @type {!proto.priscilla_common_api.ClassificationStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.priscilla_common_api.ClassificationStatus} value */
proto.priscilla_common_api.CarrierInformation.prototype.setClassificationStatus = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 bandwidth = 3;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getBandwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setBandwidth = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional OuterFec outer_fec = 4;
 * @return {!proto.priscilla_common_api.OuterFec}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getOuterFec = function() {
  return /** @type {!proto.priscilla_common_api.OuterFec} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.priscilla_common_api.OuterFec} value */
proto.priscilla_common_api.CarrierInformation.prototype.setOuterFec = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional FecType inner_fec_type = 5;
 * @return {!proto.priscilla_common_api.FecType}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getInnerFecType = function() {
  return /** @type {!proto.priscilla_common_api.FecType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.priscilla_common_api.FecType} value */
proto.priscilla_common_api.CarrierInformation.prototype.setInnerFecType = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double snr = 6;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getSnr = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setSnr = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double signal_resolution = 7;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getSignalResolution = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setSignalResolution = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional double roll_off = 8;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getRollOff = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setRollOff = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional bool is_bursting = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getIsBursting = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.priscilla_common_api.CarrierInformation.prototype.setIsBursting = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional bool inverted_spectrum = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getInvertedSpectrum = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.priscilla_common_api.CarrierInformation.prototype.setInvertedSpectrum = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint32 inner_fec_interleaver_depth = 11;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getInnerFecInterleaverDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setInnerFecInterleaverDepth = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint32 outer_fec_interleaver_depth = 12;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getOuterFecInterleaverDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setOuterFecInterleaverDepth = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional SatelliteFraming satellite_framing = 13;
 * @return {!proto.priscilla_common_api.SatelliteFraming}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getSatelliteFraming = function() {
  return /** @type {!proto.priscilla_common_api.SatelliteFraming} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.priscilla_common_api.SatelliteFraming} value */
proto.priscilla_common_api.CarrierInformation.prototype.setSatelliteFraming = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional ScramblingType scrambling_type = 14;
 * @return {!proto.priscilla_common_api.ScramblingType}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getScramblingType = function() {
  return /** @type {!proto.priscilla_common_api.ScramblingType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {!proto.priscilla_common_api.ScramblingType} value */
proto.priscilla_common_api.CarrierInformation.prototype.setScramblingType = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional double data_rate = 15;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getDataRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setDataRate = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional bool pilots = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getPilots = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.priscilla_common_api.CarrierInformation.prototype.setPilots = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional double power = 17;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getPower = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setPower = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional double corrected_ber = 18;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getCorrectedBer = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setCorrectedBer = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * optional double eb_n0 = 19;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getEbN0 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setEbN0 = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * optional double es_n0 = 20;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getEsN0 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setEsN0 = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * optional double min_burst_duration = 21;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getMinBurstDuration = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setMinBurstDuration = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * optional double max_burst_duration = 22;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getMaxBurstDuration = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setMaxBurstDuration = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * optional uint32 stream_type = 23;
 * @return {number}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getStreamType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.priscilla_common_api.CarrierInformation.prototype.setStreamType = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * optional SisMis sismis = 24;
 * @return {!proto.priscilla_common_api.SisMis}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getSismis = function() {
  return /** @type {!proto.priscilla_common_api.SisMis} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {!proto.priscilla_common_api.SisMis} value */
proto.priscilla_common_api.CarrierInformation.prototype.setSismis = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * optional Issyi issyi = 25;
 * @return {!proto.priscilla_common_api.Issyi}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getIssyi = function() {
  return /** @type {!proto.priscilla_common_api.Issyi} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {!proto.priscilla_common_api.Issyi} value */
proto.priscilla_common_api.CarrierInformation.prototype.setIssyi = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * optional Npd npd = 26;
 * @return {!proto.priscilla_common_api.Npd}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getNpd = function() {
  return /** @type {!proto.priscilla_common_api.Npd} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {!proto.priscilla_common_api.Npd} value */
proto.priscilla_common_api.CarrierInformation.prototype.setNpd = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * optional string stream_ids = 27;
 * @return {string}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getStreamIds = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.priscilla_common_api.CarrierInformation.prototype.setStreamIds = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * optional Network network = 28;
 * @return {?proto.priscilla_common_api.Network}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getNetwork = function() {
  return /** @type{?proto.priscilla_common_api.Network} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Network, 28));
};


/** @param {?proto.priscilla_common_api.Network|undefined} value */
proto.priscilla_common_api.CarrierInformation.prototype.setNetwork = function(value) {
  jspb.Message.setWrapperField(this, 28, value);
};


proto.priscilla_common_api.CarrierInformation.prototype.clearNetwork = function() {
  this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_common_api.CarrierInformation.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * repeated PairedIPAddress paired_ip_address = 29;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_common_api.PairedIPAddress>}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getPairedIpAddressList = function() {
  return /** @type{!Array.<!proto.priscilla_common_api.PairedIPAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_common_api.PairedIPAddress, 29));
};


/** @param {!Array.<!proto.priscilla_common_api.PairedIPAddress>} value */
proto.priscilla_common_api.CarrierInformation.prototype.setPairedIpAddressList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 29, value);
};


/**
 * @param {!proto.priscilla_common_api.PairedIPAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_common_api.PairedIPAddress}
 */
proto.priscilla_common_api.CarrierInformation.prototype.addPairedIpAddress = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 29, opt_value, proto.priscilla_common_api.PairedIPAddress, opt_index);
};


proto.priscilla_common_api.CarrierInformation.prototype.clearPairedIpAddressList = function() {
  this.setPairedIpAddressList([]);
};


/**
 * repeated TerminalId terminal_id = 30;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_common_api.TerminalId>}
 */
proto.priscilla_common_api.CarrierInformation.prototype.getTerminalIdList = function() {
  return /** @type{!Array.<!proto.priscilla_common_api.TerminalId>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_common_api.TerminalId, 30));
};


/** @param {!Array.<!proto.priscilla_common_api.TerminalId>} value */
proto.priscilla_common_api.CarrierInformation.prototype.setTerminalIdList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.priscilla_common_api.TerminalId=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_common_api.TerminalId}
 */
proto.priscilla_common_api.CarrierInformation.prototype.addTerminalId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.priscilla_common_api.TerminalId, opt_index);
};


proto.priscilla_common_api.CarrierInformation.prototype.clearTerminalIdList = function() {
  this.setTerminalIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.TC1Configuration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.TC1Configuration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.TC1Configuration.displayName = 'proto.priscilla_common_api.TC1Configuration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.TC1Configuration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.TC1Configuration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.TC1Configuration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.TC1Configuration.toObject = function(includeInstance, msg) {
  var f, obj = {
    localIpAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tc1IpAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    forwardingMac: jspb.Message.getFieldWithDefault(msg, 3, ""),
    forwardingUdpPort: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.TC1Configuration}
 */
proto.priscilla_common_api.TC1Configuration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.TC1Configuration;
  return proto.priscilla_common_api.TC1Configuration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.TC1Configuration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.TC1Configuration}
 */
proto.priscilla_common_api.TC1Configuration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalIpAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTc1IpAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardingMac(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setForwardingUdpPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.TC1Configuration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.TC1Configuration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.TC1Configuration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.TC1Configuration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTc1IpAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForwardingMac();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getForwardingUdpPort();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string local_ip_address = 1;
 * @return {string}
 */
proto.priscilla_common_api.TC1Configuration.prototype.getLocalIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_common_api.TC1Configuration.prototype.setLocalIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string tc1_ip_address = 2;
 * @return {string}
 */
proto.priscilla_common_api.TC1Configuration.prototype.getTc1IpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_common_api.TC1Configuration.prototype.setTc1IpAddress = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string forwarding_mac = 3;
 * @return {string}
 */
proto.priscilla_common_api.TC1Configuration.prototype.getForwardingMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.priscilla_common_api.TC1Configuration.prototype.setForwardingMac = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint32 forwarding_udp_port = 4;
 * @return {number}
 */
proto.priscilla_common_api.TC1Configuration.prototype.getForwardingUdpPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.priscilla_common_api.TC1Configuration.prototype.setForwardingUdpPort = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_common_api.get_message_header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_common_api.get_message_header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_common_api.get_message_header.displayName = 'proto.priscilla_common_api.get_message_header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_common_api.get_message_header.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_common_api.get_message_header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_common_api.get_message_header} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_common_api.get_message_header.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_common_api.get_message_header}
 */
proto.priscilla_common_api.get_message_header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_common_api.get_message_header;
  return proto.priscilla_common_api.get_message_header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_common_api.get_message_header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_common_api.get_message_header}
 */
proto.priscilla_common_api.get_message_header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_common_api.get_message_header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_common_api.get_message_header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_common_api.get_message_header} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_common_api.get_message_header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_common_api.get_message_header.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_common_api.get_message_header.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_common_api.get_message_header.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_common_api.get_message_header.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_common_api.get_message_header.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_common_api.get_message_header.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_common_api.get_message_header.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_common_api.get_message_header.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.priscilla_common_api.ReturnCode = {
  PRISCILLA_RESULT_NOT_USED: 0,
  PRISCILLA_RESULT_SUCCESS: 1,
  PRISCILLA_RESULT_INPROGRESS: 2,
  PRISCILLA_ERROR_MESSAGE_DECODE: 3,
  PRISCILLA_ERROR_INPUT_OUT_OF_RANGE: 4,
  PRISCILLA_ERROR_INPUT_MISSING_PARAM: 5,
  PRISCILLA_ERROR_CONFIG_FAILURE: 6,
  PRISCILLA_ERROR_SYSTEM_BUSY: 7,
  PRISCILLA_ERROR_MESSAGE: 8,
  PRISCILLA_INFORMATION: 9
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.SystemType = {
  PRISCILLA_SYSTEM_TYPE_NOT_USED: 0,
  PRISCILLA_DVB_S: 1,
  PRISCILLA_DVB_S2: 2,
  PRISCILLA_DVB_RCS_FL: 3,
  PRISCILLA_DVB_RCS_RL: 4,
  PRISCILLA_DVB_RCS2_FL: 5,
  PRISCILLA_DVB_RCS2_RL: 6,
  PRISCILLA_VIASAT_LINKSTAR_FL: 7,
  PRISCILLA_VIASAT_LINKSTAR_RL: 8,
  PRISCILLA_IDIRECT_INFINITI_FL: 9,
  PRISCILLA_IDIRECT_INFINITI_RL: 10,
  PRISCILLA_IDIRECT_EVOLUTION_FL: 11,
  PRISCILLA_IDIRECT_EVOLUTION_RL: 12,
  PRISCILLA_IDIRECT_VELOCITY_FL: 13,
  PRISCILLA_IDIRECT_VELOCITY_RL: 14,
  PRISCILLA_VIASAT_LINKWAY_FL: 15,
  PRISCILLA_VIASAT_LINKWAY_RL: 16,
  PRISCILLA_VIASAT_LINKWAY_S2_FL: 17,
  PRISCILLA_VIASAT_LINKWAY_S2_RL: 18,
  PRISCILLA_GILAT_SKY_EDGE_1: 19,
  PRISCILLA_GILAT_SKY_EDGE_2: 20,
  PRISCILLA_GILAT_SKY_EDGE_2C: 21,
  PRISCILLA_NEWTEC_4CPM_SAT3PLAY: 22,
  PRISCILLA_HNS_IPOS: 23,
  PRISCILLA_IDR_IBS: 24,
  PRISCILLA_CIC: 25
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.DemodulatorType = {
  PRISCILLA_FL_DEMOD_NOT_USED: 0,
  PRISCILLA_FL_DEMOD_TC1: 1,
  PRISCILLA_FL_DEMOD_SENCORE: 2,
  PRISCILLA_FL_DEMOD_NEWTEC: 3,
  PRISCILLA_FL_DEMOD_PSSR: 4
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.RFBand = {
  PRISCILLA_RFBAND_NOT_USED: 0,
  PRISCILLA_RFBAND_L_BAND: 1,
  PRISCILLA_RFBAND_C_BAND: 2,
  PRISCILLA_RFBAND_KU_BAND: 3,
  PRISCILLA_RFBAND_KA_BAND: 4
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.SisMis = {
  PRISCILLA_SISMIS_MULTIPLE: 0,
  PRISCILLA_SISMIS_SINGLE: 1
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.Issyi = {
  PRISCILLA_ISSYI_NOT_ACTIVE: 0,
  PRISCILLA_ISSYI_ACTIVE: 1
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.Npd = {
  PRISCILLA_NPD_NOT_USED: 0,
  PRISCILLA_NPD_NOT_ACTIVE: 1,
  PRISCILLA_NPD_ACTIVE: 2
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.ClassificationStatus = {
  PRISCILLA_CLASSIFICATION_STATUS_NOT_USED: 0,
  PRISCILLA_CLASSIFICATION_STATUS_UNKNOWN_CARRIER: 1,
  PRISCILLA_CLASSIFICATION_STATUS_KNOWN_CARRIER: 2
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.FecType = {
  PRISCILLA_FEC_TYPE_NOT_USED: 0,
  PRISCILLA_FEC_TYPE_TPC: 1,
  PRISCILLA_FEC_TYPE_LDPC: 2
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.OuterFec = {
  PRISCILLA_OUTER_FEC_NOT_USED: 0,
  PRISCILLA_OUTER_FEC_NONE: 1,
  PRISCILLA_OUTER_FEC_RS_188_204: 2,
  PRISCILLA_OUTER_FEC_BCH: 3
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.ClockReference = {
  PRISCILLA_CLOCK_REF_NOT_USED: 0,
  PRISCILLA_CLOCK_REF_INTERNAL: 1,
  PRISCILLA_CLOCK_REF_EXTERNAL: 2
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.MessageType = {
  PRISCILLA_NOT_USED: 0,
  PRISCILLA_GET_VERSION: 1,
  PRISCILLA_NO_MORE_MESSAGES: 2,
  PRISCILLA_LIMIT_EXCEEDED: 3,
  PRISCILLA_HELLO_MESSAGE: 4,
  PRISCILLA_SCAN_AND_CLASSIFY: 100,
  PRISCILLA_SCAN_AND_CLASSIFY_RESULT: 101,
  PRISCILLA_SCAN_STATUS: 102,
  PRISCILLA_SCAN_ABORT: 103,
  PRISCILLA_GET_RUNNING_SCANID: 104,
  PRISCILLA_SET_SYSTEM_SHUTDOWN: 200,
  PRISCILLA_GET_AVAILABLE_DEVICES: 201,
  PRISCILLA_GET_SYSTEM_CONFIGURATION: 202,
  PRISCILLA_SET_SYSTEM_CONFIGURATION: 203,
  PRISCILLA_GET_CARRIERS_CONFIGURATION: 204,
  PRISCILLA_SET_CARRIERS_CONFIGURATION: 205,
  PRISCILLA_START_CAPTURE: 220,
  PRISCILLA_CAPTURE_STARTED: 221,
  PRISCILLA_STOP_CAPTURE: 222,
  PRISCILLA_CAPTURE_STOPPED: 223,
  PRISCILLA_GET_FL_BASED_RL_CARRIERS: 224,
  PRISCILLA_CANCEL_GET_FL_BASED_RL_CARRIERS: 225,
  PRISCILLA_FL_BASED_RL_CARRIERS: 226,
  PRISCILLA_STATISTICS_MESSAGE: 240,
  PRISCILLA_RUNNING_TIME_MESSAGE: 241,
  PRISCILLA_SPECTRUM_DATA_MESSAGE: 242
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.ModulationType = {
  PRISCILLA_MODULATION_NOT_USED: 0,
  PRISCILLA_MODULATION_BPSK: 1,
  PRISCILLA_MODULATION_QPSK: 2,
  PRISCILLA_MODULATION_OQPSK: 3,
  PRISCILLA_MODULATION_EIGHT_PSK: 4,
  PRISCILLA_MODULATION_SIXTEEN_APSK: 5,
  PRISCILLA_MODULATION_SIXTEEN_QAM: 6,
  PRISCILLA_MODULATION_THIRTYTWO_APSK: 7,
  PRISCILLA_MODULATION_ACM_VCM: 8
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.SatelliteFraming = {
  PRISCILLA_FRAMING_NOT_USED: 0,
  PRISCILLA_FRAMING_UNFRAMED: 1,
  PRISCILLA_FRAMING_DVB_S: 2,
  PRISCILLA_FRAMING_DVB_S2_16K: 3,
  PRISCILLA_FRAMING_DVB_S2_64K: 4,
  PRISCILLA_FRAMING_IDR: 5,
  PRISCILLA_FRAMING_IBS: 6
};

/**
 * @enum {number}
 */
proto.priscilla_common_api.ScramblingType = {
  PRISCILLA_SCR_TYPE_NOT_USED: 0,
  PRISCILLA_SCR_TYPE_DVB_S2_PLS: 1,
  PRISCILLA_SCR_TYPE_DVB_S_SCRAMBLER: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.EthernetDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.EthernetDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.EthernetDevice.displayName = 'proto.priscilla_satprobe_api.EthernetDevice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.EthernetDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.EthernetDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.EthernetDevice} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.EthernetDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ipAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.EthernetDevice}
 */
proto.priscilla_satprobe_api.EthernetDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.EthernetDevice;
  return proto.priscilla_satprobe_api.EthernetDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.EthernetDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.EthernetDevice}
 */
proto.priscilla_satprobe_api.EthernetDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.EthernetDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.EthernetDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.EthernetDevice} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.EthernetDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.EthernetDevice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.EthernetDevice.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string ip_address = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.EthernetDevice.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.EthernetDevice.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.TC1Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.TC1Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.TC1Device.displayName = 'proto.priscilla_satprobe_api.TC1Device';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.TC1Device.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.TC1Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.TC1Device} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.TC1Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ipAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.TC1Device}
 */
proto.priscilla_satprobe_api.TC1Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.TC1Device;
  return proto.priscilla_satprobe_api.TC1Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.TC1Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.TC1Device}
 */
proto.priscilla_satprobe_api.TC1Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.TC1Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.TC1Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.TC1Device} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.TC1Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.TC1Device.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.TC1Device.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string ip_address = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.TC1Device.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.TC1Device.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.PSSRDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.PSSRDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.PSSRDevice.displayName = 'proto.priscilla_satprobe_api.PSSRDevice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.PSSRDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.PSSRDevice} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serialNo: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.PSSRDevice}
 */
proto.priscilla_satprobe_api.PSSRDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.PSSRDevice;
  return proto.priscilla_satprobe_api.PSSRDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.PSSRDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.PSSRDevice}
 */
proto.priscilla_satprobe_api.PSSRDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.PSSRDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.PSSRDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.PSSRDevice} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.PSSRDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSerialNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.PSSRDevice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.PSSRDevice.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string serial_no = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.PSSRDevice.prototype.getSerialNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.PSSRDevice.prototype.setSerialNo = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.DecoderConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.DecoderConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.DecoderConfiguration.displayName = 'proto.priscilla_satprobe_api.DecoderConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.DecoderConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.DecoderConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    controlIpAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    controlPort: jspb.Message.getFieldWithDefault(msg, 2, 0),
    decoderIpAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    decoderUsername: jspb.Message.getFieldWithDefault(msg, 4, ""),
    decoderPassword: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.DecoderConfiguration}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.DecoderConfiguration;
  return proto.priscilla_satprobe_api.DecoderConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.DecoderConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.DecoderConfiguration}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlIpAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setControlPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoderIpAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoderUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoderPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.DecoderConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.DecoderConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.DecoderConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getControlIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getControlPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDecoderIpAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDecoderUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDecoderPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string control_ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.getControlIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.setControlIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 control_port = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.getControlPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.setControlPort = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string decoder_ip_address = 3;
 * @return {string}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.getDecoderIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.setDecoderIpAddress = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string decoder_username = 4;
 * @return {string}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.getDecoderUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.setDecoderUsername = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string decoder_password = 5;
 * @return {string}
 */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.getDecoderPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.DecoderConfiguration.prototype.setDecoderPassword = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.IPForwardingConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.IPForwardingConfiguration.displayName = 'proto.priscilla_satprobe_api.IPForwardingConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.IPForwardingConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.IPForwardingConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    isEnabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    ethInterface: jspb.Message.getFieldWithDefault(msg, 2, ""),
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0),
    destinationMacAddress: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.IPForwardingConfiguration}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.IPForwardingConfiguration;
  return proto.priscilla_satprobe_api.IPForwardingConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.IPForwardingConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.IPForwardingConfiguration}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEthInterface(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationMacAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.IPForwardingConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.IPForwardingConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEthInterface();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDestinationMacAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool is_enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.setIsEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string eth_interface = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.getEthInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.setEthInterface = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 delay = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.setDelay = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string destination_mac_address = 4;
 * @return {string}
 */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.getDestinationMacAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.IPForwardingConfiguration.prototype.setDestinationMacAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.IPStorageConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.IPStorageConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.IPStorageConfiguration.displayName = 'proto.priscilla_satprobe_api.IPStorageConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.IPStorageConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.IPStorageConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    isEnabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    splitValue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    splitType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    destinationMacAddress: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.IPStorageConfiguration}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.IPStorageConfiguration;
  return proto.priscilla_satprobe_api.IPStorageConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.IPStorageConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.IPStorageConfiguration}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSplitValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSplitType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationMacAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.IPStorageConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.IPStorageConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSplitValue();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSplitType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestinationMacAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool is_enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.setIsEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.setPath = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 split_value = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.getSplitValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.setSplitValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string split_type = 4;
 * @return {string}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.getSplitType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.setSplitType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string destination_mac_address = 5;
 * @return {string}
 */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.getDestinationMacAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.IPStorageConfiguration.prototype.setDestinationMacAddress = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.DebugConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.DebugConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.DebugConfiguration.displayName = 'proto.priscilla_satprobe_api.DebugConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.DebugConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.DebugConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.DebugConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    isEnabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    traceLevel: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.DebugConfiguration}
 */
proto.priscilla_satprobe_api.DebugConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.DebugConfiguration;
  return proto.priscilla_satprobe_api.DebugConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.DebugConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.DebugConfiguration}
 */
proto.priscilla_satprobe_api.DebugConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTraceLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.DebugConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.DebugConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.DebugConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTraceLevel();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bool is_enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.setIsEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 trace_level = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.getTraceLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.DebugConfiguration.prototype.setTraceLevel = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.SencoreConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.SencoreConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.SencoreConfiguration.displayName = 'proto.priscilla_satprobe_api.SencoreConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.SencoreConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.SencoreConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    forwardingMac: jspb.Message.getFieldWithDefault(msg, 2, ""),
    forwardingUdpPort: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.SencoreConfiguration}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.SencoreConfiguration;
  return proto.priscilla_satprobe_api.SencoreConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.SencoreConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.SencoreConfiguration}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardingMac(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setForwardingUdpPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.SencoreConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.SencoreConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.SencoreConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForwardingMac();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForwardingUdpPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string forwarding_mac = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.getForwardingMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.setForwardingMac = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 forwarding_udp_port = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.getForwardingUdpPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreConfiguration.prototype.setForwardingUdpPort = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.NewtecConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.NewtecConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.NewtecConfiguration.displayName = 'proto.priscilla_satprobe_api.NewtecConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.NewtecConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.NewtecConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    forwardingMac: jspb.Message.getFieldWithDefault(msg, 2, ""),
    forwardingUdpPort: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.NewtecConfiguration}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.NewtecConfiguration;
  return proto.priscilla_satprobe_api.NewtecConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.NewtecConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.NewtecConfiguration}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardingMac(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setForwardingUdpPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.NewtecConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.NewtecConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.NewtecConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForwardingMac();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForwardingUdpPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string forwarding_mac = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.getForwardingMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.setForwardingMac = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 forwarding_udp_port = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.getForwardingUdpPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecConfiguration.prototype.setForwardingUdpPort = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.PSSRConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.PSSRConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.PSSRConfiguration.displayName = 'proto.priscilla_satprobe_api.PSSRConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.PSSRConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.PSSRConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    centreFrequency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gain: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    clockReference: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.PSSRConfiguration}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.PSSRConfiguration;
  return proto.priscilla_satprobe_api.PSSRConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.PSSRConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.PSSRConfiguration}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCentreFrequency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSamplingRate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGain(value);
      break;
    case 4:
      var value = /** @type {!proto.priscilla_common_api.ClockReference} */ (reader.readEnum());
      msg.setClockReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.PSSRConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.PSSRConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.PSSRConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCentreFrequency();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getGain();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getClockReference();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional uint64 centre_frequency = 1;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.getCentreFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.setCentreFrequency = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 sampling_rate = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.setSamplingRate = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double gain = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.getGain = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.setGain = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional priscilla_common_api.ClockReference clock_reference = 4;
 * @return {!proto.priscilla_common_api.ClockReference}
 */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.getClockReference = function() {
  return /** @type {!proto.priscilla_common_api.ClockReference} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.priscilla_common_api.ClockReference} value */
proto.priscilla_satprobe_api.PSSRConfiguration.prototype.setClockReference = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.SystemConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.SystemConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.SystemConfiguration.displayName = 'proto.priscilla_satprobe_api.SystemConfiguration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.SystemConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.SystemConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SystemConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    masterSatprobeIpAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    decoderConfiguration: (f = msg.getDecoderConfiguration()) && proto.priscilla_satprobe_api.DecoderConfiguration.toObject(includeInstance, f),
    ipForwardingConfiguration: (f = msg.getIpForwardingConfiguration()) && proto.priscilla_satprobe_api.IPForwardingConfiguration.toObject(includeInstance, f),
    ipStorageConfiguration: (f = msg.getIpStorageConfiguration()) && proto.priscilla_satprobe_api.IPStorageConfiguration.toObject(includeInstance, f),
    debugConfiguration: (f = msg.getDebugConfiguration()) && proto.priscilla_satprobe_api.DebugConfiguration.toObject(includeInstance, f),
    tc1Configuration: (f = msg.getTc1Configuration()) && proto.priscilla_common_api.TC1Configuration.toObject(includeInstance, f),
    sencoreConfiguration: (f = msg.getSencoreConfiguration()) && proto.priscilla_satprobe_api.SencoreConfiguration.toObject(includeInstance, f),
    newtecConfiguratin: (f = msg.getNewtecConfiguratin()) && proto.priscilla_satprobe_api.NewtecConfiguration.toObject(includeInstance, f),
    pssrConfiguration: (f = msg.getPssrConfiguration()) && proto.priscilla_satprobe_api.PSSRConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.SystemConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.SystemConfiguration;
  return proto.priscilla_satprobe_api.SystemConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.SystemConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.SystemConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNetworkId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterSatprobeIpAddress(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.DecoderConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.DecoderConfiguration.deserializeBinaryFromReader);
      msg.setDecoderConfiguration(value);
      break;
    case 4:
      var value = new proto.priscilla_satprobe_api.IPForwardingConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.IPForwardingConfiguration.deserializeBinaryFromReader);
      msg.setIpForwardingConfiguration(value);
      break;
    case 5:
      var value = new proto.priscilla_satprobe_api.IPStorageConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.IPStorageConfiguration.deserializeBinaryFromReader);
      msg.setIpStorageConfiguration(value);
      break;
    case 6:
      var value = new proto.priscilla_satprobe_api.DebugConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.DebugConfiguration.deserializeBinaryFromReader);
      msg.setDebugConfiguration(value);
      break;
    case 7:
      var value = new proto.priscilla_common_api.TC1Configuration;
      reader.readMessage(value,proto.priscilla_common_api.TC1Configuration.deserializeBinaryFromReader);
      msg.setTc1Configuration(value);
      break;
    case 8:
      var value = new proto.priscilla_satprobe_api.SencoreConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.SencoreConfiguration.deserializeBinaryFromReader);
      msg.setSencoreConfiguration(value);
      break;
    case 9:
      var value = new proto.priscilla_satprobe_api.NewtecConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.NewtecConfiguration.deserializeBinaryFromReader);
      msg.setNewtecConfiguratin(value);
      break;
    case 10:
      var value = new proto.priscilla_satprobe_api.PSSRConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.PSSRConfiguration.deserializeBinaryFromReader);
      msg.setPssrConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.SystemConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.SystemConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.SystemConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMasterSatprobeIpAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecoderConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.priscilla_satprobe_api.DecoderConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getIpForwardingConfiguration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.priscilla_satprobe_api.IPForwardingConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getIpStorageConfiguration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.priscilla_satprobe_api.IPStorageConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getDebugConfiguration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.priscilla_satprobe_api.DebugConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getTc1Configuration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.priscilla_common_api.TC1Configuration.serializeBinaryToWriter
    );
  }
  f = message.getSencoreConfiguration();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.priscilla_satprobe_api.SencoreConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getNewtecConfiguratin();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.priscilla_satprobe_api.NewtecConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getPssrConfiguration();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.priscilla_satprobe_api.PSSRConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 network_id = 1;
 * @return {number}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getNetworkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setNetworkId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string master_satprobe_ip_address = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getMasterSatprobeIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setMasterSatprobeIpAddress = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DecoderConfiguration decoder_configuration = 3;
 * @return {?proto.priscilla_satprobe_api.DecoderConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getDecoderConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.DecoderConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.DecoderConfiguration, 3));
};


/** @param {?proto.priscilla_satprobe_api.DecoderConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setDecoderConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearDecoderConfiguration = function() {
  this.setDecoderConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasDecoderConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IPForwardingConfiguration ip_forwarding_configuration = 4;
 * @return {?proto.priscilla_satprobe_api.IPForwardingConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getIpForwardingConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.IPForwardingConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.IPForwardingConfiguration, 4));
};


/** @param {?proto.priscilla_satprobe_api.IPForwardingConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setIpForwardingConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearIpForwardingConfiguration = function() {
  this.setIpForwardingConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasIpForwardingConfiguration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional IPStorageConfiguration ip_storage_configuration = 5;
 * @return {?proto.priscilla_satprobe_api.IPStorageConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getIpStorageConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.IPStorageConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.IPStorageConfiguration, 5));
};


/** @param {?proto.priscilla_satprobe_api.IPStorageConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setIpStorageConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearIpStorageConfiguration = function() {
  this.setIpStorageConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasIpStorageConfiguration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DebugConfiguration debug_configuration = 6;
 * @return {?proto.priscilla_satprobe_api.DebugConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getDebugConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.DebugConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.DebugConfiguration, 6));
};


/** @param {?proto.priscilla_satprobe_api.DebugConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setDebugConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearDebugConfiguration = function() {
  this.setDebugConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasDebugConfiguration = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional priscilla_common_api.TC1Configuration tc1_configuration = 7;
 * @return {?proto.priscilla_common_api.TC1Configuration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getTc1Configuration = function() {
  return /** @type{?proto.priscilla_common_api.TC1Configuration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.TC1Configuration, 7));
};


/** @param {?proto.priscilla_common_api.TC1Configuration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setTc1Configuration = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearTc1Configuration = function() {
  this.setTc1Configuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasTc1Configuration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SencoreConfiguration sencore_configuration = 8;
 * @return {?proto.priscilla_satprobe_api.SencoreConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getSencoreConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.SencoreConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.SencoreConfiguration, 8));
};


/** @param {?proto.priscilla_satprobe_api.SencoreConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setSencoreConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearSencoreConfiguration = function() {
  this.setSencoreConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasSencoreConfiguration = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional NewtecConfiguration newtec_configuratin = 9;
 * @return {?proto.priscilla_satprobe_api.NewtecConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getNewtecConfiguratin = function() {
  return /** @type{?proto.priscilla_satprobe_api.NewtecConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.NewtecConfiguration, 9));
};


/** @param {?proto.priscilla_satprobe_api.NewtecConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setNewtecConfiguratin = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearNewtecConfiguratin = function() {
  this.setNewtecConfiguratin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasNewtecConfiguratin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PSSRConfiguration pssr_configuration = 10;
 * @return {?proto.priscilla_satprobe_api.PSSRConfiguration}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.getPssrConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.PSSRConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.PSSRConfiguration, 10));
};


/** @param {?proto.priscilla_satprobe_api.PSSRConfiguration|undefined} value */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.setPssrConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.priscilla_satprobe_api.SystemConfiguration.prototype.clearPssrConfiguration = function() {
  this.setPssrConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.SystemConfiguration.prototype.hasPssrConfiguration = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.FLBasedModeConfiguration.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.FLBasedModeConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.FLBasedModeConfiguration.displayName = 'proto.priscilla_satprobe_api.FLBasedModeConfiguration';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.FLBasedModeConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.FLBasedModeConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    flFrequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lnbConvFrequency: jspb.Message.getFieldWithDefault(msg, 3, 0),
    satelliteConvFrequency: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rlCarriersList: jspb.Message.toObjectList(msg.getRlCarriersList(),
    proto.priscilla_common_api.CarrierBasicInformation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.FLBasedModeConfiguration}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.FLBasedModeConfiguration;
  return proto.priscilla_satprobe_api.FLBasedModeConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.FLBasedModeConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.FLBasedModeConfiguration}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.priscilla_common_api.SystemType} */ (reader.readEnum());
      msg.setSystemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFlFrequency(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLnbConvFrequency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSatelliteConvFrequency(value);
      break;
    case 5:
      var value = new proto.priscilla_common_api.CarrierBasicInformation;
      reader.readMessage(value,proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader);
      msg.addRlCarriers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.FLBasedModeConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.FLBasedModeConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFlFrequency();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getLnbConvFrequency();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSatelliteConvFrequency();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getRlCarriersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.SystemType system_type = 1;
 * @return {!proto.priscilla_common_api.SystemType}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.getSystemType = function() {
  return /** @type {!proto.priscilla_common_api.SystemType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.priscilla_common_api.SystemType} value */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.setSystemType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 fl_frequency = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.getFlFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.setFlFrequency = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 lnb_conv_frequency = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.getLnbConvFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.setLnbConvFrequency = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 satellite_conv_frequency = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.getSatelliteConvFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.setSatelliteConvFrequency = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated priscilla_common_api.CarrierBasicInformation rl_carriers = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.getRlCarriersList = function() {
  return /** @type{!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_common_api.CarrierBasicInformation, 5));
};


/** @param {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} value */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.setRlCarriersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.priscilla_common_api.CarrierBasicInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.addRlCarriers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.priscilla_common_api.CarrierBasicInformation, opt_index);
};


proto.priscilla_satprobe_api.FLBasedModeConfiguration.prototype.clearRlCarriersList = function() {
  this.setRlCarriersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.CarriersConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.CarriersConfiguration.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.CarriersConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.CarriersConfiguration.displayName = 'proto.priscilla_satprobe_api.CarriersConfiguration';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.CarriersConfiguration.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.CarriersConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.CarriersConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    captureMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sourceRfBand: jspb.Message.getFieldWithDefault(msg, 2, 0),
    carriersList: jspb.Message.toObjectList(msg.getCarriersList(),
    proto.priscilla_common_api.CarrierBasicInformation.toObject, includeInstance),
    flBasedModeConfiguration: (f = msg.getFlBasedModeConfiguration()) && proto.priscilla_satprobe_api.FLBasedModeConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.CarriersConfiguration}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.CarriersConfiguration;
  return proto.priscilla_satprobe_api.CarriersConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.CarriersConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.CarriersConfiguration}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.priscilla_satprobe_api.CaptureMode} */ (reader.readEnum());
      msg.setCaptureMode(value);
      break;
    case 2:
      var value = /** @type {!proto.priscilla_common_api.RFBand} */ (reader.readEnum());
      msg.setSourceRfBand(value);
      break;
    case 3:
      var value = new proto.priscilla_common_api.CarrierBasicInformation;
      reader.readMessage(value,proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader);
      msg.addCarriers(value);
      break;
    case 4:
      var value = new proto.priscilla_satprobe_api.FLBasedModeConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.FLBasedModeConfiguration.deserializeBinaryFromReader);
      msg.setFlBasedModeConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.CarriersConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.CarriersConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.CarriersConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaptureMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSourceRfBand();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCarriersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter
    );
  }
  f = message.getFlBasedModeConfiguration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.priscilla_satprobe_api.FLBasedModeConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional CaptureMode capture_mode = 1;
 * @return {!proto.priscilla_satprobe_api.CaptureMode}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.getCaptureMode = function() {
  return /** @type {!proto.priscilla_satprobe_api.CaptureMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.priscilla_satprobe_api.CaptureMode} value */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.setCaptureMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional priscilla_common_api.RFBand source_rf_band = 2;
 * @return {!proto.priscilla_common_api.RFBand}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.getSourceRfBand = function() {
  return /** @type {!proto.priscilla_common_api.RFBand} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.priscilla_common_api.RFBand} value */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.setSourceRfBand = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated priscilla_common_api.CarrierBasicInformation carriers = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.getCarriersList = function() {
  return /** @type{!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_common_api.CarrierBasicInformation, 3));
};


/** @param {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} value */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.setCarriersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.priscilla_common_api.CarrierBasicInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.addCarriers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.priscilla_common_api.CarrierBasicInformation, opt_index);
};


proto.priscilla_satprobe_api.CarriersConfiguration.prototype.clearCarriersList = function() {
  this.setCarriersList([]);
};


/**
 * optional FLBasedModeConfiguration fl_based_mode_configuration = 4;
 * @return {?proto.priscilla_satprobe_api.FLBasedModeConfiguration}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.getFlBasedModeConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.FLBasedModeConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.FLBasedModeConfiguration, 4));
};


/** @param {?proto.priscilla_satprobe_api.FLBasedModeConfiguration|undefined} value */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.setFlBasedModeConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.priscilla_satprobe_api.CarriersConfiguration.prototype.clearFlBasedModeConfiguration = function() {
  this.setFlBasedModeConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.CarriersConfiguration.prototype.hasFlBasedModeConfiguration = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.XYData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.XYData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.XYData.displayName = 'proto.priscilla_satprobe_api.XYData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.XYData.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.XYData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.XYData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.XYData.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.XYData}
 */
proto.priscilla_satprobe_api.XYData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.XYData;
  return proto.priscilla_satprobe_api.XYData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.XYData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.XYData}
 */
proto.priscilla_satprobe_api.XYData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.XYData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.XYData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.XYData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.XYData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.priscilla_satprobe_api.XYData.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.XYData.prototype.setX = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.XYData.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.XYData.prototype.setY = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.XYDataset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.XYDataset.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.XYDataset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.XYDataset.displayName = 'proto.priscilla_satprobe_api.XYDataset';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.XYDataset.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.XYDataset.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.XYDataset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.XYDataset} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.XYDataset.toObject = function(includeInstance, msg) {
  var f, obj = {
    xYList: jspb.Message.toObjectList(msg.getXYList(),
    proto.priscilla_satprobe_api.XYData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.XYDataset}
 */
proto.priscilla_satprobe_api.XYDataset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.XYDataset;
  return proto.priscilla_satprobe_api.XYDataset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.XYDataset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.XYDataset}
 */
proto.priscilla_satprobe_api.XYDataset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_satprobe_api.XYData;
      reader.readMessage(value,proto.priscilla_satprobe_api.XYData.deserializeBinaryFromReader);
      msg.addXY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.XYDataset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.XYDataset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.XYDataset} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.XYDataset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXYList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.priscilla_satprobe_api.XYData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated XYData x_y = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_satprobe_api.XYData>}
 */
proto.priscilla_satprobe_api.XYDataset.prototype.getXYList = function() {
  return /** @type{!Array.<!proto.priscilla_satprobe_api.XYData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_satprobe_api.XYData, 1));
};


/** @param {!Array.<!proto.priscilla_satprobe_api.XYData>} value */
proto.priscilla_satprobe_api.XYDataset.prototype.setXYList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.priscilla_satprobe_api.XYData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_satprobe_api.XYData}
 */
proto.priscilla_satprobe_api.XYDataset.prototype.addXY = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.priscilla_satprobe_api.XYData, opt_index);
};


proto.priscilla_satprobe_api.XYDataset.prototype.clearXYList = function() {
  this.setXYList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.TC1Statistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.TC1Statistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.TC1Statistics.displayName = 'proto.priscilla_satprobe_api.TC1Statistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.TC1Statistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.TC1Statistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.TC1Statistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tunerLocked: jspb.Message.getFieldWithDefault(msg, 3, false),
    symbolRate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    snr: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    rfLevel: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    codeRate: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    standard: jspb.Message.getFieldWithDefault(msg, 8, ""),
    linkMargin: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    ethernetPktsCount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    ethernetPktsBytes: jspb.Message.getFieldWithDefault(msg, 11, 0),
    ethernetPktsDropped: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ethernetPktsRate: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    bbFramesCount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    bbFramesBytes: jspb.Message.getFieldWithDefault(msg, 15, 0),
    bbFramesSeqErrors: jspb.Message.getFieldWithDefault(msg, 16, 0),
    bbFramesCrcErrors: jspb.Message.getFieldWithDefault(msg, 17, 0),
    bbFramesDummy: jspb.Message.getFieldWithDefault(msg, 18, 0),
    bbFramesRate: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    mpegPktsCount: jspb.Message.getFieldWithDefault(msg, 20, 0),
    mpegPktsBytes: jspb.Message.getFieldWithDefault(msg, 21, 0),
    mpegPktsCcErrors: jspb.Message.getFieldWithDefault(msg, 22, 0),
    mpegPktsDummy: jspb.Message.getFieldWithDefault(msg, 23, 0),
    mpegPktsRate: +jspb.Message.getFieldWithDefault(msg, 24, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.TC1Statistics}
 */
proto.priscilla_satprobe_api.TC1Statistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.TC1Statistics;
  return proto.priscilla_satprobe_api.TC1Statistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.TC1Statistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.TC1Statistics}
 */
proto.priscilla_satprobe_api.TC1Statistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTunerLocked(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSymbolRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSnr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRfLevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCodeRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStandard(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLinkMargin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEthernetPktsCount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEthernetPktsBytes(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEthernetPktsDropped(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEthernetPktsRate(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFramesCount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFramesBytes(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFramesSeqErrors(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFramesCrcErrors(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFramesDummy(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBbFramesRate(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktsCount(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktsBytes(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktsCcErrors(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktsDummy(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMpegPktsRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.TC1Statistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.TC1Statistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.TC1Statistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTunerLocked();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSymbolRate();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getRfLevel();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCodeRate();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getStandard();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLinkMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getEthernetPktsCount();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getEthernetPktsBytes();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getEthernetPktsDropped();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getEthernetPktsRate();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getBbFramesCount();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getBbFramesBytes();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getBbFramesSeqErrors();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getBbFramesCrcErrors();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getBbFramesDummy();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getBbFramesRate();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getMpegPktsCount();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = message.getMpegPktsBytes();
  if (f !== 0) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = message.getMpegPktsCcErrors();
  if (f !== 0) {
    writer.writeUint64(
      22,
      f
    );
  }
  f = message.getMpegPktsDummy();
  if (f !== 0) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = message.getMpegPktsRate();
  if (f !== 0.0) {
    writer.writeDouble(
      24,
      f
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 frequency = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool tuner_locked = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getTunerLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setTunerLocked = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 symbol_rate = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getSymbolRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setSymbolRate = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double snr = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getSnr = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setSnr = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double rf_level = 6;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getRfLevel = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setRfLevel = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double code_rate = 7;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getCodeRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setCodeRate = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string standard = 8;
 * @return {string}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getStandard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setStandard = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional double link_margin = 9;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getLinkMargin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setLinkMargin = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint64 ethernet_pkts_count = 10;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getEthernetPktsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setEthernetPktsCount = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 ethernet_pkts_bytes = 11;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getEthernetPktsBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setEthernetPktsBytes = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 ethernet_pkts_dropped = 12;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getEthernetPktsDropped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setEthernetPktsDropped = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional double ethernet_pkts_rate = 13;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getEthernetPktsRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setEthernetPktsRate = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional uint64 bb_frames_count = 14;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesCount = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional uint64 bb_frames_bytes = 15;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesBytes = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional uint64 bb_frames_seq_errors = 16;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesSeqErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesSeqErrors = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional uint64 bb_frames_crc_errors = 17;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesCrcErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesCrcErrors = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional uint64 bb_frames_dummy = 18;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesDummy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesDummy = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * optional double bb_frames_rate = 19;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getBbFramesRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setBbFramesRate = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * optional uint64 mpeg_pkts_count = 20;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getMpegPktsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setMpegPktsCount = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * optional uint64 mpeg_pkts_bytes = 21;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getMpegPktsBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setMpegPktsBytes = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * optional uint64 mpeg_pkts_cc_errors = 22;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getMpegPktsCcErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setMpegPktsCcErrors = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * optional uint64 mpeg_pkts_dummy = 23;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getMpegPktsDummy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setMpegPktsDummy = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * optional double mpeg_pkts_rate = 24;
 * @return {number}
 */
proto.priscilla_satprobe_api.TC1Statistics.prototype.getMpegPktsRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.TC1Statistics.prototype.setMpegPktsRate = function(value) {
  jspb.Message.setField(this, 24, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.SencoreStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.SencoreStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.SencoreStatistics.displayName = 'proto.priscilla_satprobe_api.SencoreStatistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.SencoreStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.SencoreStatistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.SencoreStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tunerLocked: jspb.Message.getFieldWithDefault(msg, 3, false),
    symbolRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    snr: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    rfLevel: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    codeRate: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    standard: jspb.Message.getFieldWithDefault(msg, 8, ""),
    linkMargin: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    totalBbFrames: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bbFrameErrors: jspb.Message.getFieldWithDefault(msg, 11, 0),
    totalMpegPkts: jspb.Message.getFieldWithDefault(msg, 12, 0),
    mpegPktErrors: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.SencoreStatistics}
 */
proto.priscilla_satprobe_api.SencoreStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.SencoreStatistics;
  return proto.priscilla_satprobe_api.SencoreStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.SencoreStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.SencoreStatistics}
 */
proto.priscilla_satprobe_api.SencoreStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTunerLocked(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSymbolRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSnr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRfLevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCodeRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStandard(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLinkMargin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBbFrames(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFrameErrors(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalMpegPkts(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.SencoreStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.SencoreStatistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.SencoreStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTunerLocked();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSymbolRate();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getRfLevel();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCodeRate();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getStandard();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLinkMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getTotalBbFrames();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getBbFrameErrors();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getTotalMpegPkts();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getMpegPktErrors();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 frequency = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool tuner_locked = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getTunerLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setTunerLocked = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double symbol_rate = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getSymbolRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setSymbolRate = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double snr = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getSnr = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setSnr = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double rf_level = 6;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getRfLevel = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setRfLevel = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double code_rate = 7;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getCodeRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setCodeRate = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string standard = 8;
 * @return {string}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getStandard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setStandard = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional double link_margin = 9;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getLinkMargin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setLinkMargin = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint64 total_bb_frames = 10;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getTotalBbFrames = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setTotalBbFrames = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 bb_frame_errors = 11;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getBbFrameErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setBbFrameErrors = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 total_mpeg_pkts = 12;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getTotalMpegPkts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setTotalMpegPkts = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint64 mpeg_pkt_errors = 13;
 * @return {number}
 */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.getMpegPktErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.SencoreStatistics.prototype.setMpegPktErrors = function(value) {
  jspb.Message.setField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.NewtecStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.NewtecStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.NewtecStatistics.displayName = 'proto.priscilla_satprobe_api.NewtecStatistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.NewtecStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.NewtecStatistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.NewtecStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tunerLocked: jspb.Message.getFieldWithDefault(msg, 3, false),
    symbolRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    snr: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    rfLevel: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    codeRate: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    standard: jspb.Message.getFieldWithDefault(msg, 8, ""),
    linkMargin: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    totalBbFrames: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bbFrameErrors: jspb.Message.getFieldWithDefault(msg, 11, 0),
    totalMpegPkts: jspb.Message.getFieldWithDefault(msg, 12, 0),
    mpegPktErrors: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.NewtecStatistics}
 */
proto.priscilla_satprobe_api.NewtecStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.NewtecStatistics;
  return proto.priscilla_satprobe_api.NewtecStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.NewtecStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.NewtecStatistics}
 */
proto.priscilla_satprobe_api.NewtecStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTunerLocked(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSymbolRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSnr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRfLevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCodeRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStandard(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLinkMargin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBbFrames(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBbFrameErrors(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalMpegPkts(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMpegPktErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.NewtecStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.NewtecStatistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.NewtecStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTunerLocked();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSymbolRate();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getRfLevel();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCodeRate();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getStandard();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLinkMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getTotalBbFrames();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getBbFrameErrors();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getTotalMpegPkts();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getMpegPktErrors();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setIpAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 frequency = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool tuner_locked = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getTunerLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setTunerLocked = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double symbol_rate = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getSymbolRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setSymbolRate = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double snr = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getSnr = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setSnr = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double rf_level = 6;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getRfLevel = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setRfLevel = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double code_rate = 7;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getCodeRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setCodeRate = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string standard = 8;
 * @return {string}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getStandard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setStandard = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional double link_margin = 9;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getLinkMargin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setLinkMargin = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint64 total_bb_frames = 10;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getTotalBbFrames = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setTotalBbFrames = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 bb_frame_errors = 11;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getBbFrameErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setBbFrameErrors = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 total_mpeg_pkts = 12;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getTotalMpegPkts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setTotalMpegPkts = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint64 mpeg_pkt_errors = 13;
 * @return {number}
 */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.getMpegPktErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.NewtecStatistics.prototype.setMpegPktErrors = function(value) {
  jspb.Message.setField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.PSSRStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.PSSRStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.PSSRStatistics.displayName = 'proto.priscilla_satprobe_api.PSSRStatistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.PSSRStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.PSSRStatistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.PSSRStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    serialNo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gain: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    samplesDropped: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sampleDropCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lastSampleDropTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.PSSRStatistics}
 */
proto.priscilla_satprobe_api.PSSRStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.PSSRStatistics;
  return proto.priscilla_satprobe_api.PSSRStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.PSSRStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.PSSRStatistics}
 */
proto.priscilla_satprobe_api.PSSRStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSamplingRate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGain(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSamplesDropped(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSampleDropCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastSampleDropTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.PSSRStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.PSSRStatistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.PSSRStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSerialNo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getGain();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSamplesDropped();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSampleDropCount();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getLastSampleDropTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional string serial_no = 1;
 * @return {string}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getSerialNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setSerialNo = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 frequency = 2;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 sampling_rate = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setSamplingRate = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double gain = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getGain = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setGain = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint64 samples_dropped = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getSamplesDropped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setSamplesDropped = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint64 sample_drop_count = 6;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getSampleDropCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setSampleDropCount = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint64 last_sample_drop_timestamp = 7;
 * @return {number}
 */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.getLastSampleDropTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.PSSRStatistics.prototype.setLastSampleDropTimestamp = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.CarrierStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.CarrierStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.CarrierStatistics.displayName = 'proto.priscilla_satprobe_api.CarrierStatistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.CarrierStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.CarrierStatistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.CarrierStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    frequency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    systemType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    snr: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    symbolRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    totalBursts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    burstErrors: jspb.Message.getFieldWithDefault(msg, 6, 0),
    crcErrors: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dummyBursts: jspb.Message.getFieldWithDefault(msg, 8, 0),
    nonTrfBursts: jspb.Message.getFieldWithDefault(msg, 9, 0),
    trafficBursts: jspb.Message.getFieldWithDefault(msg, 10, 0),
    burstsUsed: jspb.Message.getFieldWithDefault(msg, 11, 0),
    burstsNotUsed: jspb.Message.getFieldWithDefault(msg, 12, 0),
    nonIpPkts: jspb.Message.getFieldWithDefault(msg, 13, 0),
    totalIpPkts: jspb.Message.getFieldWithDefault(msg, 14, 0),
    ipPktsForwarded: jspb.Message.getFieldWithDefault(msg, 15, 0),
    ipPktsStored: jspb.Message.getFieldWithDefault(msg, 16, 0),
    latestPktTimestamp: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.CarrierStatistics}
 */
proto.priscilla_satprobe_api.CarrierStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.CarrierStatistics;
  return proto.priscilla_satprobe_api.CarrierStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.CarrierStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.CarrierStatistics}
 */
proto.priscilla_satprobe_api.CarrierStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrequency(value);
      break;
    case 2:
      var value = /** @type {!proto.priscilla_common_api.SystemType} */ (reader.readEnum());
      msg.setSystemType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSnr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSymbolRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBursts(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBurstErrors(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCrcErrors(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDummyBursts(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonTrfBursts(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTrafficBursts(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBurstsUsed(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBurstsNotUsed(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonIpPkts(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalIpPkts(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIpPktsForwarded(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIpPktsStored(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLatestPktTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.CarrierStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.CarrierStatistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.CarrierStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSystemType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSymbolRate();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTotalBursts();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getBurstErrors();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getCrcErrors();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getDummyBursts();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getNonTrfBursts();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getTrafficBursts();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getBurstsUsed();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getBurstsNotUsed();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getNonIpPkts();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getTotalIpPkts();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getIpPktsForwarded();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getIpPktsStored();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getLatestPktTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
};


/**
 * optional uint64 frequency = 1;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional priscilla_common_api.SystemType system_type = 2;
 * @return {!proto.priscilla_common_api.SystemType}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getSystemType = function() {
  return /** @type {!proto.priscilla_common_api.SystemType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.priscilla_common_api.SystemType} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setSystemType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double snr = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getSnr = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setSnr = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double symbol_rate = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getSymbolRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setSymbolRate = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint64 total_bursts = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getTotalBursts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setTotalBursts = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint64 burst_errors = 6;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getBurstErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setBurstErrors = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint64 crc_errors = 7;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getCrcErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setCrcErrors = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint64 dummy_bursts = 8;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getDummyBursts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setDummyBursts = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint64 non_trf_bursts = 9;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getNonTrfBursts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setNonTrfBursts = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint64 traffic_bursts = 10;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getTrafficBursts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setTrafficBursts = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 bursts_used = 11;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getBurstsUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setBurstsUsed = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 bursts_not_used = 12;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getBurstsNotUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setBurstsNotUsed = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint64 non_ip_pkts = 13;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getNonIpPkts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setNonIpPkts = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional uint64 total_ip_pkts = 14;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getTotalIpPkts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setTotalIpPkts = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional uint64 ip_pkts_forwarded = 15;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getIpPktsForwarded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setIpPktsForwarded = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional uint64 ip_pkts_stored = 16;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getIpPktsStored = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setIpPktsStored = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional uint64 latest_pkt_timestamp = 17;
 * @return {number}
 */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.getLatestPktTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.CarrierStatistics.prototype.setLatestPktTimestamp = function(value) {
  jspb.Message.setField(this, 17, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.get_available_devices_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.get_available_devices_message.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.get_available_devices_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.get_available_devices_message.displayName = 'proto.priscilla_satprobe_api.get_available_devices_message';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.get_available_devices_message.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.get_available_devices_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.get_available_devices_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_available_devices_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    ethernetDevicesList: jspb.Message.toObjectList(msg.getEthernetDevicesList(),
    proto.priscilla_satprobe_api.EthernetDevice.toObject, includeInstance),
    tc1DevicesList: jspb.Message.toObjectList(msg.getTc1DevicesList(),
    proto.priscilla_satprobe_api.TC1Device.toObject, includeInstance),
    pssrDevicesList: jspb.Message.toObjectList(msg.getPssrDevicesList(),
    proto.priscilla_satprobe_api.PSSRDevice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.get_available_devices_message}
 */
proto.priscilla_satprobe_api.get_available_devices_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.get_available_devices_message;
  return proto.priscilla_satprobe_api.get_available_devices_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.get_available_devices_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.get_available_devices_message}
 */
proto.priscilla_satprobe_api.get_available_devices_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.EthernetDevice;
      reader.readMessage(value,proto.priscilla_satprobe_api.EthernetDevice.deserializeBinaryFromReader);
      msg.addEthernetDevices(value);
      break;
    case 4:
      var value = new proto.priscilla_satprobe_api.TC1Device;
      reader.readMessage(value,proto.priscilla_satprobe_api.TC1Device.deserializeBinaryFromReader);
      msg.addTc1Devices(value);
      break;
    case 5:
      var value = new proto.priscilla_satprobe_api.PSSRDevice;
      reader.readMessage(value,proto.priscilla_satprobe_api.PSSRDevice.deserializeBinaryFromReader);
      msg.addPssrDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.get_available_devices_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.get_available_devices_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.get_available_devices_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getEthernetDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.priscilla_satprobe_api.EthernetDevice.serializeBinaryToWriter
    );
  }
  f = message.getTc1DevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.priscilla_satprobe_api.TC1Device.serializeBinaryToWriter
    );
  }
  f = message.getPssrDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.priscilla_satprobe_api.PSSRDevice.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.get_available_devices_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.get_available_devices_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EthernetDevice ethernet_devices = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_satprobe_api.EthernetDevice>}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.getEthernetDevicesList = function() {
  return /** @type{!Array.<!proto.priscilla_satprobe_api.EthernetDevice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_satprobe_api.EthernetDevice, 3));
};


/** @param {!Array.<!proto.priscilla_satprobe_api.EthernetDevice>} value */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.setEthernetDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.priscilla_satprobe_api.EthernetDevice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_satprobe_api.EthernetDevice}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.addEthernetDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.priscilla_satprobe_api.EthernetDevice, opt_index);
};


proto.priscilla_satprobe_api.get_available_devices_message.prototype.clearEthernetDevicesList = function() {
  this.setEthernetDevicesList([]);
};


/**
 * repeated TC1Device tc1_devices = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_satprobe_api.TC1Device>}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.getTc1DevicesList = function() {
  return /** @type{!Array.<!proto.priscilla_satprobe_api.TC1Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_satprobe_api.TC1Device, 4));
};


/** @param {!Array.<!proto.priscilla_satprobe_api.TC1Device>} value */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.setTc1DevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.priscilla_satprobe_api.TC1Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_satprobe_api.TC1Device}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.addTc1Devices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.priscilla_satprobe_api.TC1Device, opt_index);
};


proto.priscilla_satprobe_api.get_available_devices_message.prototype.clearTc1DevicesList = function() {
  this.setTc1DevicesList([]);
};


/**
 * repeated PSSRDevice pssr_devices = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_satprobe_api.PSSRDevice>}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.getPssrDevicesList = function() {
  return /** @type{!Array.<!proto.priscilla_satprobe_api.PSSRDevice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_satprobe_api.PSSRDevice, 5));
};


/** @param {!Array.<!proto.priscilla_satprobe_api.PSSRDevice>} value */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.setPssrDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.priscilla_satprobe_api.PSSRDevice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_satprobe_api.PSSRDevice}
 */
proto.priscilla_satprobe_api.get_available_devices_message.prototype.addPssrDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.priscilla_satprobe_api.PSSRDevice, opt_index);
};


proto.priscilla_satprobe_api.get_available_devices_message.prototype.clearPssrDevicesList = function() {
  this.setPssrDevicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.set_system_shutdown_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.set_system_shutdown_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.set_system_shutdown_message.displayName = 'proto.priscilla_satprobe_api.set_system_shutdown_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.set_system_shutdown_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.set_system_shutdown_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.set_system_shutdown_message}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.set_system_shutdown_message;
  return proto.priscilla_satprobe_api.set_system_shutdown_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.set_system_shutdown_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.set_system_shutdown_message}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.set_system_shutdown_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.set_system_shutdown_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_system_shutdown_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.get_system_configuration_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.get_system_configuration_message.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.get_system_configuration_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.get_system_configuration_message.displayName = 'proto.priscilla_satprobe_api.get_system_configuration_message';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.get_system_configuration_message.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.get_system_configuration_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.get_system_configuration_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.priscilla_satprobe_api.SystemConfiguration.toObject(includeInstance, f),
    ethernetDevicesList: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.get_system_configuration_message}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.get_system_configuration_message;
  return proto.priscilla_satprobe_api.get_system_configuration_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.get_system_configuration_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.get_system_configuration_message}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.SystemConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.SystemConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addEthernetDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.get_system_configuration_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.get_system_configuration_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.get_system_configuration_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.priscilla_satprobe_api.SystemConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getEthernetDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.get_system_configuration_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.get_system_configuration_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SystemConfiguration configuration = 3;
 * @return {?proto.priscilla_satprobe_api.SystemConfiguration}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.getConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.SystemConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.SystemConfiguration, 3));
};


/** @param {?proto.priscilla_satprobe_api.SystemConfiguration|undefined} value */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.priscilla_satprobe_api.get_system_configuration_message.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string ethernet_devices = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.getEthernetDevicesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<string>} value */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.setEthernetDevicesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.priscilla_satprobe_api.get_system_configuration_message.prototype.addEthernetDevices = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.priscilla_satprobe_api.get_system_configuration_message.prototype.clearEthernetDevicesList = function() {
  this.setEthernetDevicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.set_system_configuration_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.set_system_configuration_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.set_system_configuration_message.displayName = 'proto.priscilla_satprobe_api.set_system_configuration_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.set_system_configuration_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.set_system_configuration_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.priscilla_satprobe_api.SystemConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.set_system_configuration_message}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.set_system_configuration_message;
  return proto.priscilla_satprobe_api.set_system_configuration_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.set_system_configuration_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.set_system_configuration_message}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.SystemConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.SystemConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.set_system_configuration_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.set_system_configuration_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.set_system_configuration_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.priscilla_satprobe_api.SystemConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.set_system_configuration_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.set_system_configuration_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SystemConfiguration configuration = 3;
 * @return {?proto.priscilla_satprobe_api.SystemConfiguration}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.getConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.SystemConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.SystemConfiguration, 3));
};


/** @param {?proto.priscilla_satprobe_api.SystemConfiguration|undefined} value */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.priscilla_satprobe_api.set_system_configuration_message.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_system_configuration_message.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.get_carriers_configuration_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.get_carriers_configuration_message.displayName = 'proto.priscilla_satprobe_api.get_carriers_configuration_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.get_carriers_configuration_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.get_carriers_configuration_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.priscilla_satprobe_api.CarriersConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.get_carriers_configuration_message}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.get_carriers_configuration_message;
  return proto.priscilla_satprobe_api.get_carriers_configuration_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.get_carriers_configuration_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.get_carriers_configuration_message}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.CarriersConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.CarriersConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.get_carriers_configuration_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.get_carriers_configuration_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.priscilla_satprobe_api.CarriersConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CarriersConfiguration configuration = 3;
 * @return {?proto.priscilla_satprobe_api.CarriersConfiguration}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.getConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.CarriersConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.CarriersConfiguration, 3));
};


/** @param {?proto.priscilla_satprobe_api.CarriersConfiguration|undefined} value */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_carriers_configuration_message.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.set_carriers_configuration_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.set_carriers_configuration_message.displayName = 'proto.priscilla_satprobe_api.set_carriers_configuration_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.set_carriers_configuration_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.set_carriers_configuration_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.priscilla_satprobe_api.CarriersConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.set_carriers_configuration_message}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.set_carriers_configuration_message;
  return proto.priscilla_satprobe_api.set_carriers_configuration_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.set_carriers_configuration_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.set_carriers_configuration_message}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_satprobe_api.CarriersConfiguration;
      reader.readMessage(value,proto.priscilla_satprobe_api.CarriersConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.set_carriers_configuration_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.set_carriers_configuration_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.priscilla_satprobe_api.CarriersConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CarriersConfiguration configuration = 3;
 * @return {?proto.priscilla_satprobe_api.CarriersConfiguration}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.getConfiguration = function() {
  return /** @type{?proto.priscilla_satprobe_api.CarriersConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.CarriersConfiguration, 3));
};


/** @param {?proto.priscilla_satprobe_api.CarriersConfiguration|undefined} value */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.set_carriers_configuration_message.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.start_capture_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.start_capture_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.start_capture_message.displayName = 'proto.priscilla_satprobe_api.start_capture_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.start_capture_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.start_capture_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.start_capture_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.start_capture_message}
 */
proto.priscilla_satprobe_api.start_capture_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.start_capture_message;
  return proto.priscilla_satprobe_api.start_capture_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.start_capture_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.start_capture_message}
 */
proto.priscilla_satprobe_api.start_capture_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.start_capture_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.start_capture_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.start_capture_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.start_capture_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.start_capture_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.start_capture_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.start_capture_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.start_capture_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.capture_started_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.capture_started_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.capture_started_message.displayName = 'proto.priscilla_satprobe_api.capture_started_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.capture_started_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.capture_started_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.capture_started_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.capture_started_message}
 */
proto.priscilla_satprobe_api.capture_started_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.capture_started_message;
  return proto.priscilla_satprobe_api.capture_started_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.capture_started_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.capture_started_message}
 */
proto.priscilla_satprobe_api.capture_started_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.capture_started_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.capture_started_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.capture_started_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.capture_started_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.capture_started_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.capture_started_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.capture_started_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.capture_started_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.stop_capture_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.stop_capture_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.stop_capture_message.displayName = 'proto.priscilla_satprobe_api.stop_capture_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.stop_capture_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.stop_capture_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.stop_capture_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.stop_capture_message}
 */
proto.priscilla_satprobe_api.stop_capture_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.stop_capture_message;
  return proto.priscilla_satprobe_api.stop_capture_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.stop_capture_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.stop_capture_message}
 */
proto.priscilla_satprobe_api.stop_capture_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.stop_capture_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.stop_capture_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.stop_capture_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.stop_capture_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.stop_capture_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.stop_capture_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.stop_capture_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.stop_capture_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.capture_stopped_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.capture_stopped_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.capture_stopped_message.displayName = 'proto.priscilla_satprobe_api.capture_stopped_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.capture_stopped_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.capture_stopped_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.capture_stopped_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.capture_stopped_message}
 */
proto.priscilla_satprobe_api.capture_stopped_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.capture_stopped_message;
  return proto.priscilla_satprobe_api.capture_stopped_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.capture_stopped_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.capture_stopped_message}
 */
proto.priscilla_satprobe_api.capture_stopped_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.capture_stopped_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.capture_stopped_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.capture_stopped_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.capture_stopped_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.capture_stopped_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.capture_stopped_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.displayName = 'proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    systemType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    flFrequency: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message;
  return proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = /** @type {!proto.priscilla_common_api.SystemType} */ (reader.readEnum());
      msg.setSystemType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFlFrequency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getSystemType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFlFrequency();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional priscilla_common_api.SystemType system_type = 3;
 * @return {!proto.priscilla_common_api.SystemType}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.getSystemType = function() {
  return /** @type {!proto.priscilla_common_api.SystemType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.priscilla_common_api.SystemType} value */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.setSystemType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 fl_frequency = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.getFlFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.get_rl_carriers_from_fl_message.prototype.setFlFrequency = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.displayName = 'proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    systemType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message;
  return proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = /** @type {!proto.priscilla_common_api.SystemType} */ (reader.readEnum());
      msg.setSystemType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getSystemType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional priscilla_common_api.SystemType system_type = 3;
 * @return {!proto.priscilla_common_api.SystemType}
 */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.getSystemType = function() {
  return /** @type {!proto.priscilla_common_api.SystemType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.priscilla_common_api.SystemType} value */
proto.priscilla_satprobe_api.cancel_get_rl_carriers_from_fl_message.prototype.setSystemType = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.rl_carriers_from_fl_message.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.rl_carriers_from_fl_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.rl_carriers_from_fl_message.displayName = 'proto.priscilla_satprobe_api.rl_carriers_from_fl_message';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.rl_carriers_from_fl_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.rl_carriers_from_fl_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    carriersList: jspb.Message.toObjectList(msg.getCarriersList(),
    proto.priscilla_common_api.CarrierBasicInformation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.rl_carriers_from_fl_message;
  return proto.priscilla_satprobe_api.rl_carriers_from_fl_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.rl_carriers_from_fl_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.rl_carriers_from_fl_message}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = new proto.priscilla_common_api.CarrierBasicInformation;
      reader.readMessage(value,proto.priscilla_common_api.CarrierBasicInformation.deserializeBinaryFromReader);
      msg.addCarriers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.rl_carriers_from_fl_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.rl_carriers_from_fl_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getCarriersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.priscilla_common_api.CarrierBasicInformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated priscilla_common_api.CarrierBasicInformation carriers = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.getCarriersList = function() {
  return /** @type{!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_common_api.CarrierBasicInformation, 3));
};


/** @param {!Array.<!proto.priscilla_common_api.CarrierBasicInformation>} value */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.setCarriersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.priscilla_common_api.CarrierBasicInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_common_api.CarrierBasicInformation}
 */
proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.addCarriers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.priscilla_common_api.CarrierBasicInformation, opt_index);
};


proto.priscilla_satprobe_api.rl_carriers_from_fl_message.prototype.clearCarriersList = function() {
  this.setCarriersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.status_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.status_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.status_message.displayName = 'proto.priscilla_satprobe_api.status_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.status_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.status_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.status_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.status_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.status_message}
 */
proto.priscilla_satprobe_api.status_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.status_message;
  return proto.priscilla_satprobe_api.status_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.status_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.status_message}
 */
proto.priscilla_satprobe_api.status_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.status_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.status_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.status_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.status_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.status_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.status_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.status_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.status_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.priscilla_satprobe_api.status_message.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.priscilla_satprobe_api.status_message.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.statistics_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priscilla_satprobe_api.statistics_message.repeatedFields_, null);
};
goog.inherits(proto.priscilla_satprobe_api.statistics_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.statistics_message.displayName = 'proto.priscilla_satprobe_api.statistics_message';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priscilla_satprobe_api.statistics_message.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.statistics_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.statistics_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.statistics_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    returnMessage: (f = msg.getReturnMessage()) && proto.priscilla_common_api.ReturnMessage.toObject(includeInstance, f),
    runningTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tc1Statistics: (f = msg.getTc1Statistics()) && proto.priscilla_satprobe_api.TC1Statistics.toObject(includeInstance, f),
    sencoreStatistics: (f = msg.getSencoreStatistics()) && proto.priscilla_satprobe_api.SencoreStatistics.toObject(includeInstance, f),
    newtecStatistics: (f = msg.getNewtecStatistics()) && proto.priscilla_satprobe_api.NewtecStatistics.toObject(includeInstance, f),
    pssrStatistics: (f = msg.getPssrStatistics()) && proto.priscilla_satprobe_api.PSSRStatistics.toObject(includeInstance, f),
    carriersStatisticsList: jspb.Message.toObjectList(msg.getCarriersStatisticsList(),
    proto.priscilla_satprobe_api.CarrierStatistics.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.statistics_message}
 */
proto.priscilla_satprobe_api.statistics_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.statistics_message;
  return proto.priscilla_satprobe_api.statistics_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.statistics_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.statistics_message}
 */
proto.priscilla_satprobe_api.statistics_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.priscilla_common_api.ReturnMessage;
      reader.readMessage(value,proto.priscilla_common_api.ReturnMessage.deserializeBinaryFromReader);
      msg.setReturnMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRunningTime(value);
      break;
    case 4:
      var value = new proto.priscilla_satprobe_api.TC1Statistics;
      reader.readMessage(value,proto.priscilla_satprobe_api.TC1Statistics.deserializeBinaryFromReader);
      msg.setTc1Statistics(value);
      break;
    case 5:
      var value = new proto.priscilla_satprobe_api.SencoreStatistics;
      reader.readMessage(value,proto.priscilla_satprobe_api.SencoreStatistics.deserializeBinaryFromReader);
      msg.setSencoreStatistics(value);
      break;
    case 6:
      var value = new proto.priscilla_satprobe_api.NewtecStatistics;
      reader.readMessage(value,proto.priscilla_satprobe_api.NewtecStatistics.deserializeBinaryFromReader);
      msg.setNewtecStatistics(value);
      break;
    case 7:
      var value = new proto.priscilla_satprobe_api.PSSRStatistics;
      reader.readMessage(value,proto.priscilla_satprobe_api.PSSRStatistics.deserializeBinaryFromReader);
      msg.setPssrStatistics(value);
      break;
    case 8:
      var value = new proto.priscilla_satprobe_api.CarrierStatistics;
      reader.readMessage(value,proto.priscilla_satprobe_api.CarrierStatistics.deserializeBinaryFromReader);
      msg.addCarriersStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.statistics_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.statistics_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.statistics_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.priscilla_common_api.ReturnMessage.serializeBinaryToWriter
    );
  }
  f = message.getRunningTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTc1Statistics();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.priscilla_satprobe_api.TC1Statistics.serializeBinaryToWriter
    );
  }
  f = message.getSencoreStatistics();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.priscilla_satprobe_api.SencoreStatistics.serializeBinaryToWriter
    );
  }
  f = message.getNewtecStatistics();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.priscilla_satprobe_api.NewtecStatistics.serializeBinaryToWriter
    );
  }
  f = message.getPssrStatistics();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.priscilla_satprobe_api.PSSRStatistics.serializeBinaryToWriter
    );
  }
  f = message.getCarriersStatisticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.priscilla_satprobe_api.CarrierStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional priscilla_common_api.ReturnMessage return_message = 2;
 * @return {?proto.priscilla_common_api.ReturnMessage}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getReturnMessage = function() {
  return /** @type{?proto.priscilla_common_api.ReturnMessage} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.ReturnMessage, 2));
};


/** @param {?proto.priscilla_common_api.ReturnMessage|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setReturnMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearReturnMessage = function() {
  this.setReturnMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasReturnMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 running_time = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getRunningTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setRunningTime = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional TC1Statistics tc1_statistics = 4;
 * @return {?proto.priscilla_satprobe_api.TC1Statistics}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getTc1Statistics = function() {
  return /** @type{?proto.priscilla_satprobe_api.TC1Statistics} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.TC1Statistics, 4));
};


/** @param {?proto.priscilla_satprobe_api.TC1Statistics|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setTc1Statistics = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearTc1Statistics = function() {
  this.setTc1Statistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasTc1Statistics = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SencoreStatistics sencore_statistics = 5;
 * @return {?proto.priscilla_satprobe_api.SencoreStatistics}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getSencoreStatistics = function() {
  return /** @type{?proto.priscilla_satprobe_api.SencoreStatistics} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.SencoreStatistics, 5));
};


/** @param {?proto.priscilla_satprobe_api.SencoreStatistics|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setSencoreStatistics = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearSencoreStatistics = function() {
  this.setSencoreStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasSencoreStatistics = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional NewtecStatistics newtec_statistics = 6;
 * @return {?proto.priscilla_satprobe_api.NewtecStatistics}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getNewtecStatistics = function() {
  return /** @type{?proto.priscilla_satprobe_api.NewtecStatistics} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.NewtecStatistics, 6));
};


/** @param {?proto.priscilla_satprobe_api.NewtecStatistics|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setNewtecStatistics = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearNewtecStatistics = function() {
  this.setNewtecStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasNewtecStatistics = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PSSRStatistics pssr_statistics = 7;
 * @return {?proto.priscilla_satprobe_api.PSSRStatistics}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getPssrStatistics = function() {
  return /** @type{?proto.priscilla_satprobe_api.PSSRStatistics} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.PSSRStatistics, 7));
};


/** @param {?proto.priscilla_satprobe_api.PSSRStatistics|undefined} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setPssrStatistics = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearPssrStatistics = function() {
  this.setPssrStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.hasPssrStatistics = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated CarrierStatistics carriers_statistics = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.priscilla_satprobe_api.CarrierStatistics>}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.getCarriersStatisticsList = function() {
  return /** @type{!Array.<!proto.priscilla_satprobe_api.CarrierStatistics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priscilla_satprobe_api.CarrierStatistics, 8));
};


/** @param {!Array.<!proto.priscilla_satprobe_api.CarrierStatistics>} value */
proto.priscilla_satprobe_api.statistics_message.prototype.setCarriersStatisticsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.priscilla_satprobe_api.CarrierStatistics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priscilla_satprobe_api.CarrierStatistics}
 */
proto.priscilla_satprobe_api.statistics_message.prototype.addCarriersStatistics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.priscilla_satprobe_api.CarrierStatistics, opt_index);
};


proto.priscilla_satprobe_api.statistics_message.prototype.clearCarriersStatisticsList = function() {
  this.setCarriersStatisticsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priscilla_satprobe_api.spectrum_data_message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priscilla_satprobe_api.spectrum_data_message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.priscilla_satprobe_api.spectrum_data_message.displayName = 'proto.priscilla_satprobe_api.spectrum_data_message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.toObject = function(opt_includeInstance) {
  return proto.priscilla_satprobe_api.spectrum_data_message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priscilla_satprobe_api.spectrum_data_message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.priscilla_satprobe_api.spectrum_data_message.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.priscilla_common_api.Header.toObject(includeInstance, f),
    centreFrequency: jspb.Message.getFieldWithDefault(msg, 3, 0),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gain: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    spectrumData: (f = msg.getSpectrumData()) && proto.priscilla_satprobe_api.XYDataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priscilla_satprobe_api.spectrum_data_message}
 */
proto.priscilla_satprobe_api.spectrum_data_message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priscilla_satprobe_api.spectrum_data_message;
  return proto.priscilla_satprobe_api.spectrum_data_message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priscilla_satprobe_api.spectrum_data_message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priscilla_satprobe_api.spectrum_data_message}
 */
proto.priscilla_satprobe_api.spectrum_data_message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priscilla_common_api.Header;
      reader.readMessage(value,proto.priscilla_common_api.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCentreFrequency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSamplingRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGain(value);
      break;
    case 6:
      var value = new proto.priscilla_satprobe_api.XYDataset;
      reader.readMessage(value,proto.priscilla_satprobe_api.XYDataset.deserializeBinaryFromReader);
      msg.setSpectrumData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priscilla_satprobe_api.spectrum_data_message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priscilla_satprobe_api.spectrum_data_message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.priscilla_satprobe_api.spectrum_data_message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.priscilla_common_api.Header.serializeBinaryToWriter
    );
  }
  f = message.getCentreFrequency();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getGain();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSpectrumData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.priscilla_satprobe_api.XYDataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional priscilla_common_api.Header header = 1;
 * @return {?proto.priscilla_common_api.Header}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.getHeader = function() {
  return /** @type{?proto.priscilla_common_api.Header} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_common_api.Header, 1));
};


/** @param {?proto.priscilla_common_api.Header|undefined} value */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.priscilla_satprobe_api.spectrum_data_message.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 centre_frequency = 3;
 * @return {number}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.getCentreFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.setCentreFrequency = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint32 sampling_rate = 4;
 * @return {number}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.setSamplingRate = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double gain = 5;
 * @return {number}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.getGain = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.setGain = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional XYDataset spectrum_data = 6;
 * @return {?proto.priscilla_satprobe_api.XYDataset}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.getSpectrumData = function() {
  return /** @type{?proto.priscilla_satprobe_api.XYDataset} */ (
    jspb.Message.getWrapperField(this, proto.priscilla_satprobe_api.XYDataset, 6));
};


/** @param {?proto.priscilla_satprobe_api.XYDataset|undefined} value */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.setSpectrumData = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.priscilla_satprobe_api.spectrum_data_message.prototype.clearSpectrumData = function() {
  this.setSpectrumData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.priscilla_satprobe_api.spectrum_data_message.prototype.hasSpectrumData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.priscilla_satprobe_api.CaptureMode = {
  PRISCILLA_SATPROBE_CAPTURE_MODE_NOT_USED: 0,
  PRISCILLA_SATPROBE_CAPTURE_MODE_NORMAL: 1,
  PRISCILLA_SATPROBE_CAPTURE_MODE_FL_BASED: 2
};

